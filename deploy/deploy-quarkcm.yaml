---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: quarkcm-operator
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "services", "endpoints", "configmaps"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["quarksoft.io"]
  resources: ["rdmaingresses"]
  verbs: ["get", "watch", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: quarkcm-operator
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: quarkcm-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: quarkcm-operator
subjects:
  - kind: ServiceAccount
    name: quarkcm-operator
    namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: quarkcm-daemon
  namespace: default
spec:
  selector:
    matchLabels:
      job: quarkcm-daemon
  template:
    metadata:
      labels:
        job: quarkcm-daemon
    spec:
      tolerations:
        # The daemon shall run on the master node
        - effect: NoSchedule
          operator: Exists
      serviceAccountName: quarkcm-operator
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      hostPID: true
      volumes:
        - name: quarkcni
          hostPath:
            path: /var
            type: Directory
        - name: quarkcm
          hostPath:
            path: /var/quarkcm
            type: DirectoryOrCreate
      initContainers:
        - image: quarkcm/quarkcni:v0.2.0
          name: node-init
          command: [./node-init.sh]
          securityContext:
            privileged: true
          volumeMounts:
            - name: quarkcni
              mountPath: /home
      containers:
        - name: quarkcm-daemon
          image: quarkcm/quarkcm:v0.2.0
          securityContext:
            privileged: true
          volumeMounts:
            - name: quarkcm
              mountPath: /home
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: quarkrdma-daemon
  namespace: default
spec:
  selector:
    matchLabels:
      job: quarkrdma-daemon
  template:
    metadata:
      labels:
        job: quarkrdma-daemon
    spec:
      tolerations:
        # The daemon shall run on the master node
        - effect: NoSchedule
          operator: Exists
      serviceAccountName: quarkcm-operator
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      hostPID: true
      volumes:
        - name: quarkrdma
          hostPath:
            path: /var/quarkrdma
            type: DirectoryOrCreate
      containers:
        - name: quarkrdma-daemon
          image: quarkcm/rdma_srv:v0.2.0
          securityContext:
            privileged: true
          volumeMounts:
            - name: quarkrdma
              mountPath: /var/quarkrdma
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: quarkegress-daemon
  namespace: default
spec:
  selector:
    matchLabels:
      job: quarkegress-daemon
  template:
    metadata:
      labels:
        job: quarkegress-daemon
    spec:
      tolerations:
        # The daemon shall run on the master node
        - effect: NoSchedule
          operator: Exists
      serviceAccountName: quarkcm-operator
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      hostPID: true
      volumes:
        - name: quarkegress
          hostPath:
            path: /var/quarkrdma
            type: DirectoryOrCreate
      containers:
        - name: quarkegress-daemon
          image: quarkcm/rdma_egress:v0.2.0
          securityContext:
            privileged: true
          volumeMounts:
            - name: quarkegress
              mountPath: /var/quarkrdma
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: quarkingress-daemon
  namespace: default
spec:
  selector:
    matchLabels:
      job: quarkingress-daemon
  template:
    metadata:
      labels:
        job: quarkingress-daemon
    spec:
      tolerations:
        # The daemon shall run on the master node
        - effect: NoSchedule
          operator: Exists
      serviceAccountName: quarkcm-operator
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      hostPID: true
      volumes:
        - name: quarkingress
          hostPath:
            path: /var/quarkrdma
            type: DirectoryOrCreate
      containers:
        - name: quarkingress-daemon
          image: quarkcm/rdma_ingress:v0.2.0
          securityContext:
            privileged: true
          volumeMounts:
            - name: quarkingress
              mountPath: /var/quarkrdma
---
apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: quark
handler: quark
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: rdmaingresses.quarksoft.io
spec:
  scope: Cluster
  group: quarksoft.io
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                rules:
                  type: array
                  items:
                    type: object
                    properties:
                      port:
                        type: integer
                      service:
                        type: string
                      targetport:
                        type: integer
  names:
    kind: RdmaIngress
    plural: rdmaingresses
    singular: rdmaingress
    shortNames:
      - rin
      - rins
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    k8s-app: kube-dns
  name: coredns
  namespace: kube-system
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
            weight: 100
      runtimeClassName: quark
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        image: registry.k8s.io/coredns/coredns:v1.9.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      dnsPolicy: Default      
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: coredns
      serviceAccountName: coredns
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume
