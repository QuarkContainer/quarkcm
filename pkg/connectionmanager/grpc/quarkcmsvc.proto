/*
Copyright 2022 quarkcm Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";
package quarkcmsvc;
import "google/protobuf/empty.proto";

option go_package = "pkg/grpc";

service QuarkCMService {
  // Test
  rpc TestPing (TestRequestMessage) returns (TestResponseMessage) {}

  rpc ListNode (google.protobuf.Empty) returns (NodeListMessage) {}
  rpc WatchNode (MaxResourceVersionMessage) returns (stream NodeMessage) {}
  rpc ListPod (google.protobuf.Empty) returns (PodListMessage) {}
  rpc WatchPod (MaxResourceVersionMessage) returns (stream PodMessage) {}
  rpc ListService (google.protobuf.Empty) returns (ServiceListMessage) {}
  rpc WatchService (MaxResourceVersionMessage) returns (stream ServiceMessage) {}
  rpc ListEndpoints (google.protobuf.Empty) returns (EndpointsListMessage) {}
  rpc WatchEndpoints (MaxResourceVersionMessage) returns (stream EndpointsMessage) {}
  rpc ListConfigMap (google.protobuf.Empty) returns (ConfigMapListMessage) {}
  rpc WatchConfigMap (MaxResourceVersionMessage) returns (stream ConfigMapMessage) {}
  rpc ListIngress (google.protobuf.Empty) returns (IngressListMessage) {}
  rpc WatchIngress (MaxResourceVersionMessage) returns (stream IngressMessage) {}
  rpc ListRdmaIngress (google.protobuf.Empty) returns (RdmaIngressListMessage) {}
  rpc WatchRdmaIngress (MaxResourceVersionMessage) returns (stream RdmaIngressMessage) {}
}

message TestRequestMessage {
    string client_name = 1;
}

message TestResponseMessage {
    string server_name = 1;
}

message NodeMessage {
    string name = 1;
    string hostname = 2;
    uint32 ip = 3;
    uint64 creation_timestamp = 4;
    int32 resource_version = 5;
    uint32 subnet = 6;
    uint32 net_mask = 7;
    string event_type = 8;
}

message NodeListMessage {
    repeated NodeMessage nodes = 1;
}

message PodMessage {
    string key = 1;
    uint32 ip = 2;
    string node_name = 3;
    string container_id = 4;
    int32 resource_version = 5;
    string event_type = 6;
}

message PodListMessage {
    repeated PodMessage pods = 1;
}

message ServiceMessage {
    string name = 1;
    uint32 cluster_ip = 2;
    repeated string ports = 3;
    int32 resource_version = 4;
    string event_type = 5;
}

message ServiceListMessage {
    repeated ServiceMessage services = 1;
}

message EndpointsMessage {
    string name = 1;
    repeated string ip_with_ports = 2;
    int32 resource_version = 3;
    string event_type = 4;
}

message EndpointsListMessage {
    repeated EndpointsMessage Endpointses = 1;
}

message ConfigMapMessage {
    string name = 1;
    string value = 2;
    int32 resource_version = 3;
    string event_type = 4;
}

message ConfigMapListMessage {
    repeated ConfigMapMessage ConfigMaps = 1;
}

message IngressMessage {
    string name = 1;
    string service = 2;
    uint32 port_number = 3;
    int32 resource_version = 4;
    string event_type = 5;
}

message IngressListMessage {
    repeated IngressMessage Ingresses = 1;
}

message RdmaIngressMessage {
    uint32 port_number = 1;
    string service = 2;
    uint32 target_port_number = 3;
    int32 resource_version = 4;
    string event_type = 5;
}

message RdmaIngressListMessage {
    repeated RdmaIngressMessage RdmaIngresses = 1;
}

message MaxResourceVersionMessage {
    int32 max_resource_version = 1;
}
